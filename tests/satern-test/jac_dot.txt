INPUTS { xm1  fl64 : (1,2) ;
		 xm2  fl64 : (1,2) ;
		 xm3  fl64 : (1,2) ;
		 xm4  fl64 : (1,2) ;
		 xm5  fl64 : (1,2) ;
		 xm6  fl64 : (1,2) ;
		 xm7  fl64 : (1,2) ;
		 xm8  fl64 : (1,2) ;
		 x    fl64 : (1,2) ;
		 xp8  fl64 : (1,2) ;
		 xp7  fl64 : (1,2) ;
		 xp6  fl64 : (1,2) ;
		 xp5  fl64 : (1,2) ;
		 xp4  fl64 : (1,2) ;
		 xp3  fl64 : (1,2) ;
		 xp2  fl64 : (1,2) ;
		 xp1  fl64 : (1,2) ;
	   }

OUTPUTS { Q ; }

EXPRS {

		 Z rnd64 = 	xm1 * 0.00015240359743940623
			+ xm2 * 0.0012192287795152498
			+ xm3 * 0.005486529507818624
			+ xm4 * 0.017069202913213496
			+ xm5 * 0.04053935691888205
			+ xm6 * 0.07681141310946074
			+ xm7 * 0.11948442039249448
			+ xm8 * 0.15484205499843673
			+ x   * 0.1687107823654227
			+ xp8 * 0.15484205499843673
			+ xp7 * 0.11948442039249449
			+ xp6 * 0.07681141310946071
			+ xp5 * 0.04053935691888205
			+ xp4 * 0.017069202913213496
			+ xp3 * 0.0054865295078186235
			+ xp2 * 0.0012192287795152498
			+ xp1 * 0.00015240359743940623 ;

		Q rnd64 =  Z*64 + xp7*xm1*xp1*Z + (Z/xm6) * xp6 ;

		}
