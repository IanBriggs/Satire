INPUTS { xm1_0   fl64 : (1,2) ;
		 xm2_0   fl64 : (1,2) ;
		 xm3_0   fl64 : (1,2) ;
		 xm4_0   fl64 : (1,2) ;
		 xm5_0   fl64 : (1,2) ;
		 xm6_0   fl64 : (1,2) ;
		 xm7_0   fl64 : (1,2) ;
		 xm8_0   fl64 : (1,2) ;
		 xm9_0   fl64 : (1,2) ;
		 xm10_0  fl64 : (1,2) ;
		 x0_0     fl64 : (1,2) ;
		 xp10_0  fl64 : (1,2) ;
		 xp9_0   fl64 : (1,2) ;
		 xp8_0   fl64 : (1,2) ;
		 xp7_0   fl64 : (1,2) ;
		 xp6_0   fl64 : (1,2) ;
		 xp5_0   fl64 : (1,2) ;
		 xp4_0   fl64 : (1,2) ;
		 xp3_0   fl64 : (1,2) ;
		 xp2_0   fl64 : (1,2) ;
		 xp1_0   fl64 : (1,2) ;
	   }

OUTPUTS { x0_10; }

EXPRS {
	xm9_1  rnd64 =   (0.25*xm10_0 + 0.5*xm9_0 + 0.25*xm8_0);
	xm8_1  rnd64 =   (0.25*xm9_0 + 0.5*xm8_0 + 0.25*xm7_0);
	xm7_1  rnd64 =   (0.25*xm8_0 + 0.5*xm7_0 + 0.25*xm6_0);
	xm6_1  rnd64 =   (0.25*xm7_0 + 0.5*xm6_0 + 0.25*xm5_0);
	xm5_1  rnd64 =   (0.25*xm6_0 + 0.5*xm5_0 + 0.25*xm4_0);
	xm4_1  rnd64 =   (0.25*xm5_0 + 0.5*xm4_0 + 0.25*xm3_0);
	xm3_1  rnd64 =   (0.25*xm4_0 + 0.5*xm3_0 + 0.25*xm2_0);
	xm2_1  rnd64 =   (0.25*xm3_0 + 0.5*xm2_0 + 0.25*xm1_0);
	xm1_1  rnd64 =   (0.25*xm2_0 + 0.5*xm1_0 + 0.25*x0_0);
	x0_1  rnd64 =   (0.25*xm1_0 + 0.5*x0_0 + 0.25*xp1_0);
	xp1_1  rnd64 =   (0.25*x0_0 + 0.5*xp1_0 + 0.25*xp2_0);
	xp2_1  rnd64 =   (0.25*xp1_0 + 0.5*xp2_0 + 0.25*xp3_0);
	xp3_1  rnd64 =   (0.25*xp2_0 + 0.5*xp3_0 + 0.25*xp4_0);
	xp4_1  rnd64 =   (0.25*xp3_0 + 0.5*xp4_0 + 0.25*xp5_0);
	xp5_1  rnd64 =   (0.25*xp4_0 + 0.5*xp5_0 + 0.25*xp6_0);
	xp6_1  rnd64 =   (0.25*xp5_0 + 0.5*xp6_0 + 0.25*xp7_0);
	xp7_1  rnd64 =   (0.25*xp6_0 + 0.5*xp7_0 + 0.25*xp8_0);
	xp8_1  rnd64 =   (0.25*xp7_0 + 0.5*xp8_0 + 0.25*xp9_0);
	xp9_1  rnd64 =   (0.25*xp8_0 + 0.5*xp9_0 + 0.25*xp10_0);
	xm8_2  rnd64 =   (0.25*xm9_1 + 0.5*xm8_1 + 0.25*xm7_1);
	xm7_2  rnd64 =   (0.25*xm8_1 + 0.5*xm7_1 + 0.25*xm6_1);
	xm6_2  rnd64 =   (0.25*xm7_1 + 0.5*xm6_1 + 0.25*xm5_1);
	xm5_2  rnd64 =   (0.25*xm6_1 + 0.5*xm5_1 + 0.25*xm4_1);
	xm4_2  rnd64 =   (0.25*xm5_1 + 0.5*xm4_1 + 0.25*xm3_1);
	xm3_2  rnd64 =   (0.25*xm4_1 + 0.5*xm3_1 + 0.25*xm2_1);
	xm2_2  rnd64 =   (0.25*xm3_1 + 0.5*xm2_1 + 0.25*xm1_1);
	xm1_2  rnd64 =   (0.25*xm2_1 + 0.5*xm1_1 + 0.25*x0_1);
	x0_2  rnd64 =   (0.25*xm1_1 + 0.5*x0_1 + 0.25*xp1_1);
	xp1_2  rnd64 =   (0.25*x0_1 + 0.5*xp1_1 + 0.25*xp2_1);
	xp2_2  rnd64 =   (0.25*xp1_1 + 0.5*xp2_1 + 0.25*xp3_1);
	xp3_2  rnd64 =   (0.25*xp2_1 + 0.5*xp3_1 + 0.25*xp4_1);
	xp4_2  rnd64 =   (0.25*xp3_1 + 0.5*xp4_1 + 0.25*xp5_1);
	xp5_2  rnd64 =   (0.25*xp4_1 + 0.5*xp5_1 + 0.25*xp6_1);
	xp6_2  rnd64 =   (0.25*xp5_1 + 0.5*xp6_1 + 0.25*xp7_1);
	xp7_2  rnd64 =   (0.25*xp6_1 + 0.5*xp7_1 + 0.25*xp8_1);
	xp8_2  rnd64 =   (0.25*xp7_1 + 0.5*xp8_1 + 0.25*xp9_1);
	xm7_3  rnd64 =   (0.25*xm8_2 + 0.5*xm7_2 + 0.25*xm6_2);
	xm6_3  rnd64 =   (0.25*xm7_2 + 0.5*xm6_2 + 0.25*xm5_2);
	xm5_3  rnd64 =   (0.25*xm6_2 + 0.5*xm5_2 + 0.25*xm4_2);
	xm4_3  rnd64 =   (0.25*xm5_2 + 0.5*xm4_2 + 0.25*xm3_2);
	xm3_3  rnd64 =   (0.25*xm4_2 + 0.5*xm3_2 + 0.25*xm2_2);
	xm2_3  rnd64 =   (0.25*xm3_2 + 0.5*xm2_2 + 0.25*xm1_2);
	xm1_3  rnd64 =   (0.25*xm2_2 + 0.5*xm1_2 + 0.25*x0_2);
	x0_3  rnd64 =   (0.25*xm1_2 + 0.5*x0_2 + 0.25*xp1_2);
	xp1_3  rnd64 =   (0.25*x0_2 + 0.5*xp1_2 + 0.25*xp2_2);
	xp2_3  rnd64 =   (0.25*xp1_2 + 0.5*xp2_2 + 0.25*xp3_2);
	xp3_3  rnd64 =   (0.25*xp2_2 + 0.5*xp3_2 + 0.25*xp4_2);
	xp4_3  rnd64 =   (0.25*xp3_2 + 0.5*xp4_2 + 0.25*xp5_2);
	xp5_3  rnd64 =   (0.25*xp4_2 + 0.5*xp5_2 + 0.25*xp6_2);
	xp6_3  rnd64 =   (0.25*xp5_2 + 0.5*xp6_2 + 0.25*xp7_2);
	xp7_3  rnd64 =   (0.25*xp6_2 + 0.5*xp7_2 + 0.25*xp8_2);
	xm6_4  rnd64 =   (0.25*xm7_3 + 0.5*xm6_3 + 0.25*xm5_3);
	xm5_4  rnd64 =   (0.25*xm6_3 + 0.5*xm5_3 + 0.25*xm4_3);
	xm4_4  rnd64 =   (0.25*xm5_3 + 0.5*xm4_3 + 0.25*xm3_3);
	xm3_4  rnd64 =   (0.25*xm4_3 + 0.5*xm3_3 + 0.25*xm2_3);
	xm2_4  rnd64 =   (0.25*xm3_3 + 0.5*xm2_3 + 0.25*xm1_3);
	xm1_4  rnd64 =   (0.25*xm2_3 + 0.5*xm1_3 + 0.25*x0_3);
	x0_4  rnd64 =   (0.25*xm1_3 + 0.5*x0_3 + 0.25*xp1_3);
	xp1_4  rnd64 =   (0.25*x0_3 + 0.5*xp1_3 + 0.25*xp2_3);
	xp2_4  rnd64 =   (0.25*xp1_3 + 0.5*xp2_3 + 0.25*xp3_3);
	xp3_4  rnd64 =   (0.25*xp2_3 + 0.5*xp3_3 + 0.25*xp4_3);
	xp4_4  rnd64 =   (0.25*xp3_3 + 0.5*xp4_3 + 0.25*xp5_3);
	xp5_4  rnd64 =   (0.25*xp4_3 + 0.5*xp5_3 + 0.25*xp6_3);
	xp6_4  rnd64 =   (0.25*xp5_3 + 0.5*xp6_3 + 0.25*xp7_3);
	xm5_5  rnd64 =   (0.25*xm6_4 + 0.5*xm5_4 + 0.25*xm4_4);
	xm4_5  rnd64 =   (0.25*xm5_4 + 0.5*xm4_4 + 0.25*xm3_4);
	xm3_5  rnd64 =   (0.25*xm4_4 + 0.5*xm3_4 + 0.25*xm2_4);
	xm2_5  rnd64 =   (0.25*xm3_4 + 0.5*xm2_4 + 0.25*xm1_4);
	xm1_5  rnd64 =   (0.25*xm2_4 + 0.5*xm1_4 + 0.25*x0_4);
	x0_5  rnd64 =   (0.25*xm1_4 + 0.5*x0_4 + 0.25*xp1_4);
	xp1_5  rnd64 =   (0.25*x0_4 + 0.5*xp1_4 + 0.25*xp2_4);
	xp2_5  rnd64 =   (0.25*xp1_4 + 0.5*xp2_4 + 0.25*xp3_4);
	xp3_5  rnd64 =   (0.25*xp2_4 + 0.5*xp3_4 + 0.25*xp4_4);
	xp4_5  rnd64 =   (0.25*xp3_4 + 0.5*xp4_4 + 0.25*xp5_4);
	xp5_5  rnd64 =   (0.25*xp4_4 + 0.5*xp5_4 + 0.25*xp6_4);
	xm4_6  rnd64 =   (0.25*xm5_5 + 0.5*xm4_5 + 0.25*xm3_5);
	xm3_6  rnd64 =   (0.25*xm4_5 + 0.5*xm3_5 + 0.25*xm2_5);
	xm2_6  rnd64 =   (0.25*xm3_5 + 0.5*xm2_5 + 0.25*xm1_5);
	xm1_6  rnd64 =   (0.25*xm2_5 + 0.5*xm1_5 + 0.25*x0_5);
	x0_6  rnd64 =   (0.25*xm1_5 + 0.5*x0_5 + 0.25*xp1_5);
	xp1_6  rnd64 =   (0.25*x0_5 + 0.5*xp1_5 + 0.25*xp2_5);
	xp2_6  rnd64 =   (0.25*xp1_5 + 0.5*xp2_5 + 0.25*xp3_5);
	xp3_6  rnd64 =   (0.25*xp2_5 + 0.5*xp3_5 + 0.25*xp4_5);
	xp4_6  rnd64 =   (0.25*xp3_5 + 0.5*xp4_5 + 0.25*xp5_5);
	xm3_7  rnd64 =   (0.25*xm4_6 + 0.5*xm3_6 + 0.25*xm2_6);
	xm2_7  rnd64 =   (0.25*xm3_6 + 0.5*xm2_6 + 0.25*xm1_6);
	xm1_7  rnd64 =   (0.25*xm2_6 + 0.5*xm1_6 + 0.25*x0_6);
	x0_7  rnd64 =   (0.25*xm1_6 + 0.5*x0_6 + 0.25*xp1_6);
	xp1_7  rnd64 =   (0.25*x0_6 + 0.5*xp1_6 + 0.25*xp2_6);
	xp2_7  rnd64 =   (0.25*xp1_6 + 0.5*xp2_6 + 0.25*xp3_6);
	xp3_7  rnd64 =   (0.25*xp2_6 + 0.5*xp3_6 + 0.25*xp4_6);
	xm2_8  rnd64 =   (0.25*xm3_7 + 0.5*xm2_7 + 0.25*xm1_7);
	xm1_8  rnd64 =   (0.25*xm2_7 + 0.5*xm1_7 + 0.25*x0_7);
	x0_8  rnd64 =   (0.25*xm1_7 + 0.5*x0_7 + 0.25*xp1_7);
	xp1_8  rnd64 =   (0.25*x0_7 + 0.5*xp1_7 + 0.25*xp2_7);
	xp2_8  rnd64 =   (0.25*xp1_7 + 0.5*xp2_7 + 0.25*xp3_7);
	xm1_9  rnd64 =   (0.25*xm2_8 + 0.5*xm1_8 + 0.25*x0_8);
	x0_9  rnd64 =   (0.25*xm1_8 + 0.5*x0_8 + 0.25*xp1_8);
	xp1_9  rnd64 =   (0.25*x0_8 + 0.5*xp1_8 + 0.25*xp2_8);
	x0_10  rnd64 =   (0.25*xm1_9 + 0.5*x0_9 + 0.25*xp1_9);
}
